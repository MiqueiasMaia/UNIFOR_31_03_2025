name: Sync Branches

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  statuses: write

jobs:
  sync-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Verificar se há mudanças para sincronizar
        id: check_changes
        run: |
          git fetch origin dev
          if ! git diff --quiet origin/dev main; then
            echo "has_changes=true" >> $GITHUB_ENV
          else
            echo "has_changes=false" >> $GITHUB_ENV
          fi

      - name: Criar e fazer merge da PR para dev
        if: env.has_changes == 'true'
        run: |
          # Criar uma nova branch para o merge
          BRANCH_NAME="sync-main-to-dev-$(date +%s)"
          git checkout -b $BRANCH_NAME
          
          # Fazer merge da main na branch temporária
          git merge origin/main --no-ff -m "chore: sync main into dev"
          
          # Fazer push da branch
          git push origin $BRANCH_NAME
          
          # Criar e fazer merge da PR
          gh pr create \
            --title "chore: sync main into dev" \
            --body "Sincronização automática da main para dev" \
            --base dev \
            --head $BRANCH_NAME
          
          # Aguardar a PR ser criada
          sleep 5
          
          # Fazer merge da PR
          gh pr merge $BRANCH_NAME --merge --auto
          
          # Limpar a branch temporária
          git push origin --delete $BRANCH_NAME
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 